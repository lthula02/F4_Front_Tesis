[{"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\index.js":"1","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\reportWebVitals.js":"2","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\App.js":"3","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\firebase-config.js":"4","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\config\\settings\\settings.js":"5","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\styles\\Global.js":"6","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\auth\\context\\context.js":"7","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\UML\\UML.js":"8","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\screens\\Home\\Home.js":"9","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\googleAuth.js":"10","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Content\\Content.js":"11","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Table\\Table.js":"12","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\login.js":"13","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SideBar\\Sidebar.js":"14","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Loader\\Loader.js":"15","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\TableItem.js":"16","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\LoginButton\\LoginButton.js":"17","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarFooter\\SidebarFooter.js":"18","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarHeader\\SidebarHeader.js":"19","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarItem\\SidebarItem.js":"20","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Navbar\\Navbar.js":"21","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\nodes\\nodes.js":"22","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\FileReader\\FileReader.js":"23","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\NavbarItem\\NavbarItem.js":"24","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Excel\\ExcelDownloader.js":"25","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\errors\\errors.js":"26","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\elements\\elements.js":"27","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\ModalMessage\\ModalMessage.js":"28","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\architecture\\architecture.js":"29","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SelectMessage\\SelectMessage.js":"30","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\EditMessage\\EditMessage.js":"31","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\DeleteMessage\\DeleteMessage.js":"32","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\architecture\\architecture.js":"33","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\elements\\elements.js":"34","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\content\\downloader.js":"35","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarDetail\\SidebarDetail.js":"36","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\versions\\versions.js":"37","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\versions\\versions.js":"38","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\projects\\projects.js":"39","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Menu\\Menu.js":"40","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Nodes\\Nodes.js":"41","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Edges\\Edges.js":"42","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\projects\\projects.js":"43","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\CompositeComponent\\CompositeComponent.js":"44","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\metrics\\metrics.js":"45","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\metrics\\metrics.js":"46","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\diagrams\\diagrams.js":"47","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\index.js":"48","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\reportWebVitals.js":"49","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\App.js":"50","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\firebase\\firebase-config.js":"51","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\config\\settings\\settings.js":"52","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\styles\\Global.js":"53","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\screens\\Home\\Home.js":"54","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\UML\\UML.js":"55","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\auth\\context\\context.js":"56","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\firebase\\googleAuth.js":"57","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SideBar\\Sidebar.js":"58","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Content\\Content.js":"59","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Table\\Table.js":"60","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\login\\login.js":"61","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\LoginButton\\LoginButton.js":"62","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Loader\\Loader.js":"63","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarHeader\\SidebarHeader.js":"64","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Navbar\\Navbar.js":"65","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarFooter\\SidebarFooter.js":"66","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarItem\\SidebarItem.js":"67","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\TableItem.js":"68","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\nodes\\nodes.js":"69","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\CompositeComponent\\CompositeComponent.js":"70","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\Nodes\\Nodes.js":"71","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\Edges\\Edges.js":"72","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\elements\\elements.js":"73","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\metrics\\metrics.js":"74","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\elements\\elements.js":"75","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\metrics\\metrics.js":"76","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\ModalMessage\\ModalMessage.js":"77","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\errors\\errors.js":"78","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\FileReader\\FileReader.js":"79","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarDetail\\SidebarDetail.js":"80","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Menu\\Menu.js":"81","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\NavbarItem\\NavbarItem.js":"82","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Excel\\ExcelDownloader.js":"83","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\versions\\versions.js":"84","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\content\\downloader.js":"85","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\projects\\projects.js":"86","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\diagrams\\diagrams.js":"87","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\architecture\\architecture.js":"88","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\DeleteMessage\\DeleteMessage.js":"89","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\EditMessage\\EditMessage.js":"90","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\projects\\projects.js":"91","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\login\\versions\\versions.js":"92","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SelectMessage\\SelectMessage.js":"93","E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\architecture\\architecture.js":"94"},{"size":877,"mtime":1682557840610,"results":"95","hashOfConfig":"96"},{"size":375,"mtime":1682557840611,"results":"97","hashOfConfig":"96"},{"size":2801,"mtime":1682557840580,"results":"98","hashOfConfig":"96"},{"size":817,"mtime":1682557840605,"results":"99","hashOfConfig":"96"},{"size":414,"mtime":1682557840604,"results":"100","hashOfConfig":"96"},{"size":251,"mtime":1682557840632,"results":"101","hashOfConfig":"96"},{"size":101,"mtime":1682557840584,"results":"102","hashOfConfig":"96"},{"size":3672,"mtime":1682557840603,"results":"103","hashOfConfig":"96"},{"size":4272,"mtime":1688425303654,"results":"104","hashOfConfig":"96"},{"size":651,"mtime":1682557840605,"results":"105","hashOfConfig":"96"},{"size":7921,"mtime":1682557840585,"results":"106","hashOfConfig":"96"},{"size":4405,"mtime":1697306216476,"results":"107","hashOfConfig":"96"},{"size":1083,"mtime":1682557840582,"results":"108","hashOfConfig":"96"},{"size":3574,"mtime":1682557840596,"results":"109","hashOfConfig":"96"},{"size":265,"mtime":1682557840588,"results":"110","hashOfConfig":"96"},{"size":3658,"mtime":1682557840603,"results":"111","hashOfConfig":"96"},{"size":1758,"mtime":1682557840590,"results":"112","hashOfConfig":"96"},{"size":1037,"mtime":1682557840598,"results":"113","hashOfConfig":"96"},{"size":2289,"mtime":1682557840598,"results":"114","hashOfConfig":"96"},{"size":2261,"mtime":1682557840599,"results":"115","hashOfConfig":"96"},{"size":10052,"mtime":1697306216463,"results":"116","hashOfConfig":"96"},{"size":8681,"mtime":1682557840608,"results":"117","hashOfConfig":"96"},{"size":8363,"mtime":1688425303646,"results":"118","hashOfConfig":"96"},{"size":1078,"mtime":1682557840595,"results":"119","hashOfConfig":"96"},{"size":2200,"mtime":1682557840587,"results":"120","hashOfConfig":"96"},{"size":1224,"mtime":1682557840607,"results":"121","hashOfConfig":"96"},{"size":4329,"mtime":1682557840607,"results":"122","hashOfConfig":"96"},{"size":354,"mtime":1682557840593,"results":"123","hashOfConfig":"96"},{"size":4505,"mtime":1682557840606,"results":"124","hashOfConfig":"96"},{"size":648,"mtime":1682557840595,"results":"125","hashOfConfig":"96"},{"size":672,"mtime":1682557840586,"results":"126","hashOfConfig":"96"},{"size":729,"mtime":1682557840586,"results":"127","hashOfConfig":"96"},{"size":2265,"mtime":1682557840581,"results":"128","hashOfConfig":"96"},{"size":5053,"mtime":1697306216439,"results":"129","hashOfConfig":"96"},{"size":543,"mtime":1682557840606,"results":"130","hashOfConfig":"96"},{"size":5014,"mtime":1688425303648,"results":"131","hashOfConfig":"96"},{"size":4947,"mtime":1682557840610,"results":"132","hashOfConfig":"96"},{"size":2592,"mtime":1682557840582,"results":"133","hashOfConfig":"96"},{"size":3683,"mtime":1697306216513,"results":"134","hashOfConfig":"96"},{"size":6708,"mtime":1700195670178,"results":"135","hashOfConfig":"96"},{"size":9992,"mtime":1697306216508,"results":"136","hashOfConfig":"96"},{"size":11979,"mtime":1697306216497,"results":"137","hashOfConfig":"96"},{"size":2302,"mtime":1682557840583,"results":"138","hashOfConfig":"96"},{"size":9128,"mtime":1697306216483,"results":"139","hashOfConfig":"96"},{"size":1363,"mtime":1682557840608,"results":"140","hashOfConfig":"96"},{"size":2935,"mtime":1682557840583,"results":"141","hashOfConfig":"96"},{"size":1984,"mtime":1700195638798,"results":"142","hashOfConfig":"96"},{"size":877,"mtime":1705357703364,"results":"143","hashOfConfig":"144"},{"size":375,"mtime":1705357703364,"results":"145","hashOfConfig":"144"},{"size":2758,"mtime":1705358329954,"results":"146","hashOfConfig":"144"},{"size":817,"mtime":1705357703358,"results":"147","hashOfConfig":"144"},{"size":414,"mtime":1705357703357,"results":"148","hashOfConfig":"144"},{"size":251,"mtime":1705357703366,"results":"149","hashOfConfig":"144"},{"size":4272,"mtime":1705357703365,"results":"150","hashOfConfig":"144"},{"size":3672,"mtime":1705357703357,"results":"151","hashOfConfig":"144"},{"size":101,"mtime":1705357703340,"results":"152","hashOfConfig":"144"},{"size":651,"mtime":1705357703359,"results":"153","hashOfConfig":"144"},{"size":3574,"mtime":1705357703350,"results":"154","hashOfConfig":"144"},{"size":7012,"mtime":1705358640975,"results":"155","hashOfConfig":"144"},{"size":4405,"mtime":1705357703353,"results":"156","hashOfConfig":"144"},{"size":1083,"mtime":1705357703338,"results":"157","hashOfConfig":"144"},{"size":1758,"mtime":1705357703346,"results":"158","hashOfConfig":"144"},{"size":265,"mtime":1705357703345,"results":"159","hashOfConfig":"144"},{"size":2289,"mtime":1705357703351,"results":"160","hashOfConfig":"144"},{"size":10042,"mtime":1705359005153,"results":"161","hashOfConfig":"144"},{"size":1037,"mtime":1705357703351,"results":"162","hashOfConfig":"144"},{"size":2261,"mtime":1705357703352,"results":"163","hashOfConfig":"144"},{"size":3658,"mtime":1705357703356,"results":"164","hashOfConfig":"144"},{"size":8681,"mtime":1705357703362,"results":"165","hashOfConfig":"144"},{"size":9100,"mtime":1705365821466,"results":"166","hashOfConfig":"144"},{"size":9992,"mtime":1705357703356,"results":"167","hashOfConfig":"144"},{"size":11979,"mtime":1705357703355,"results":"168","hashOfConfig":"144"},{"size":4329,"mtime":1705357703360,"results":"169","hashOfConfig":"144"},{"size":1179,"mtime":1705359374885,"results":"170","hashOfConfig":"144"},{"size":4995,"mtime":1705358347366,"results":"171","hashOfConfig":"144"},{"size":2935,"mtime":1705357703339,"results":"172","hashOfConfig":"144"},{"size":354,"mtime":1705357703347,"results":"173","hashOfConfig":"144"},{"size":1224,"mtime":1705357703361,"results":"174","hashOfConfig":"144"},{"size":8363,"mtime":1705357703344,"results":"175","hashOfConfig":"144"},{"size":5014,"mtime":1705357703350,"results":"176","hashOfConfig":"144"},{"size":6702,"mtime":1705358697012,"results":"177","hashOfConfig":"144"},{"size":1078,"mtime":1705357703348,"results":"178","hashOfConfig":"144"},{"size":2200,"mtime":1705357703343,"results":"179","hashOfConfig":"144"},{"size":4947,"mtime":1705357703363,"results":"180","hashOfConfig":"144"},{"size":543,"mtime":1705357703360,"results":"181","hashOfConfig":"144"},{"size":3683,"mtime":1705357703363,"results":"182","hashOfConfig":"144"},{"size":1984,"mtime":1705357703337,"results":"183","hashOfConfig":"144"},{"size":4505,"mtime":1705357703359,"results":"184","hashOfConfig":"144"},{"size":729,"mtime":1705357703342,"results":"185","hashOfConfig":"144"},{"size":672,"mtime":1705357703343,"results":"186","hashOfConfig":"144"},{"size":2302,"mtime":1705357703340,"results":"187","hashOfConfig":"144"},{"size":2592,"mtime":1705357703339,"results":"188","hashOfConfig":"144"},{"size":648,"mtime":1705357703349,"results":"189","hashOfConfig":"144"},{"size":2265,"mtime":1705357703336,"results":"190","hashOfConfig":"144"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"5adw5a",{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"193"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"193"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"193"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"193"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"193"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"193"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"193"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"193"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"193"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"193"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"193"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"193"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"193"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ausnym",{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\index.js",[],["393","394"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\reportWebVitals.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\App.js",["395"],"import React, { useEffect, useState } from \"react\";\r\nimport { GlobalStyle } from \"./styles/Global\";\r\nimport \"./App.css\";\r\nimport \"./styles/Theme/variables.css\";\r\nimport { registerLicense } from '@syncfusion/ej2-base';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport Vista from './components/UML/UML';\r\n\r\nimport AppContext from \"./auth/context/context\";\r\n\r\n/** Componente que contiene todas las rutas\r\n *  de navegación en la aplicación\r\n */\r\nfunction App() {\r\n  const [user, setUser] = useState();\r\n  const [selectedProject, setSelectedProject] = useState();\r\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\r\n  const [selectionModel, setSelectionModel] = useState([]);\r\n  const [reloadSidebar, setReloadSidebar] = useState(false);\r\n  const [cy, setCy] = useState();\r\n  const [composite, setComposite] = useState(false);\r\n  /**\r\n   * Restaurar usuario si ya se ha iniciado sesión\r\n   */\r\n  const restoreUser = () => {\r\n    const tempUser = localStorage.getItem(\"user\");\r\n    if (tempUser) setUser(JSON.parse(tempUser));\r\n  };\r\n\r\n  registerLicense(\r\n    'Mgo+DSMBaFt/QHRqVVhlXFpHaV1CQmFJfFBmRGlYeVRyfUUmHVdTRHRcQl9iQX9QdEVnW3pZc3M=;Mgo+DSMBPh8sVXJ0S0J+XE9BdlRBQmFJYVF2R2BJflRxcl9EaUwxOX1dQl9gSXxSfkRgW39acnFdQmc=;ORg4AjUWIQA/Gnt2VVhkQlFac19JXnxLfkx0RWFab196dVNMYlVBJAtUQF1hSn5Rd01iWn1edHZQT2hb;MTE1NjQ3NUAzMjMwMmUzNDJlMzBpaC9nOE4vait1ejFGS09EelUwaHpjL3lvazNWOG5ZcUd6SDdJR3FHRkEwPQ==;MTE1NjQ3NkAzMjMwMmUzNDJlMzBtbVV4Z3o0K0IvSm9nSE5FTTZOWEtUdUdSQXRMM3pBd25wWW1ibkp0U2tnPQ==;NRAiBiAaIQQuGjN/V0Z+WE9EaFpCVmBWfFNpR2NbfE5xflRAal5YVBYiSV9jS31TdERrWHxccHBXQGRVWA==;MTE1NjQ3OEAzMjMwMmUzNDJlMzBBQjRscmZGT2xoZTU1V0JGc3o5OFc3UUFrR1NVNkVsbC92OWNoQk41MG9zPQ==;MTE1NjQ3OUAzMjMwMmUzNDJlMzBLOHlvWmozck9WWWEvUDd4WnJMRWIybDZZMmVIcEs1SjJiM0NRMmRFMGNjPQ==;Mgo+DSMBMAY9C3t2VVhkQlFac19JXnxLfkx0RWFab196dVNMYlVBJAtUQF1hSn5Rd01iWn1edHZTT2lV;MTE1NjQ4MUAzMjMwMmUzNDJlMzBXRlJybnVrQ0VKSXMydnJKT3dOYW9Ca2NWc3ROSEdKa1A4OVlsVUxFVmw0PQ==;MTE1NjQ4MkAzMjMwMmUzNDJlMzBDanhUWnQxcDZITHZsNVBSOWNjNmFnQTJ4UEFyU1g0UFkwNENWa0dldDZvPQ==;MTE1NjQ4M0AzMjMwMmUzNDJlMzBBQjRscmZGT2xoZTU1V0JGc3o5OFc3UUFrR1NVNkVsbC92OWNoQk41MG9zPQ=='\r\n  );\r\n\r\n  useEffect(() => {\r\n    restoreUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AppContext.Provider value={{\r\n          user, setUser,\r\n          selectedProject, setSelectedProject,\r\n          selectedNodes, setSelectedNodes,\r\n          reloadSidebar, setReloadSidebar,\r\n          selectionModel, setSelectionModel,\r\n          cy, setCy,\r\n          composite, setComposite,\r\n        }}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Router>\r\n      </AppContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\firebase-config.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\config\\settings\\settings.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\styles\\Global.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\auth\\context\\context.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\UML\\UML.js",["396","397","398","399","400","401","402","403","404","405","406"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { DiagramComponent } from '@syncfusion/ej2-react-diagrams';\r\nimport AppContext from '../../auth/context/context';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction UML({ setShowUml }) {\r\n  const { selectedProject } = useContext(AppContext);\r\n  const [nodes, setNodes] = useState([]);\r\n  const [connectors, setConnectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    renderNodesUML();\r\n    renderConnectorUML();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [nodes]);\r\n\r\n  const renderNodesUML = () => {\r\n    let nodos = [];\r\n    selectedProject.elements.list_t.map((node) => {\r\n      let members = [];\r\n      node.composite_component.map((component) => {\r\n        let member = {\r\n          name: component,\r\n        };\r\n        members.push(member);\r\n      });\r\n      let object = {\r\n        id: node.name,\r\n        shape: {\r\n          type: 'UmlClassifier',\r\n          enumerationShape: {\r\n            name: node.name,\r\n            members: members,\r\n          },\r\n          classifier: 'Enumeration',\r\n        },\r\n        offsetX: node.offsetX,\r\n        offsetY: node.offsetY,\r\n      };\r\n      nodos.push(object);\r\n    });\r\n    setNodes(nodos);\r\n  };\r\n\r\n  const renderConnectorUML = () => {\r\n    let conectores = [];\r\n    const nodesStatic = selectedProject.elements.list_t;\r\n    selectedProject.elements.list_t.map((node) => {\r\n      console.log('NODOSSS');\r\n      console.log(node);\r\n      node.provided_interfaces?.map((provided) => {\r\n        nodesStatic.map((nodos) => {\r\n          nodos.required_interfaces?.map((required) => {\r\n            console.log('REQUIRED');\r\n            console.log(required);\r\n            console.log(provided);\r\n            if (required == provided) {\r\n              let exist = false;\r\n              conectores?.map((connect) => {\r\n                if (\r\n                  connect.sourcePoint.x == node.offsetX &&\r\n                  connect.targetPoint.x == nodos.offsetX\r\n                ) {\r\n                  exist = true;\r\n                }\r\n              });\r\n              if (!exist) {\r\n                console.log('PASO?');\r\n                console.log(node.offsetX, node.offsetY);\r\n                console.log(nodos.offsetX, nodos.offsetY);\r\n                let object = {\r\n                  id: 'connector' + conectores.length,\r\n                  //Define connector start and end points\r\n                  sourcePoint: { x: node.offsetX, y: node.offsetY },\r\n                  targetPoint: { x: nodos.offsetX, y: nodos.offsetY },\r\n                  type: 'Straight',\r\n                  shape: {\r\n                    type: 'UmlClassifier',\r\n                    //Set an relationship for connector\r\n                    relationship: 'Inheritance',\r\n                  },\r\n                };\r\n                conectores.push(object);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n    console.log('CONECTORES??');\r\n    console.log(conectores);\r\n    setConnectors(conectores);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 'auto', overflow: 'scroll' }}>\r\n      {selectedProject ? (\r\n        <DiagramComponent\r\n          id=\"container\"\r\n          width={'100%'}\r\n          height={'600px'}\r\n          nodes={nodes}\r\n          connectors={connectors}\r\n        />\r\n      ) : (\r\n        Swal.fire({\r\n          text: 'Debe seleccionar una arquitectura',\r\n          icon: 'warning',\r\n          showCancelButton: false,\r\n          confirmButtonColor: 'var(--success)',\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            setShowUml(false);\r\n          }\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UML;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\screens\\Home\\Home.js",["407"],"// @ts-nocheck\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport Sidebar from \"../../components/SideBar/Sidebar\";\r\nimport Content from \"../../components/Content/Content\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport { googleAuth } from \"../../firebase/googleAuth\";\r\nimport { postLogin } from \"../../api/login/login\";\r\nimport UML from \"../../components/UML/UML\";\r\n\r\n/** Componente que representa la página\r\n *  principal de navegación\r\n */\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const [drawerItems, setDrawerItems] = useState();\r\n    const [open, setOpen] = useState(true);\r\n    const [load, setLoad] = useState(true);\r\n    const [showUml, setShowUml] = useState(false);\r\n    const {\r\n        user,\r\n        setUser,\r\n        reloadSidebar,\r\n        selectedProject,\r\n        setSelectedProject,\r\n    } = useContext(AppContext);\r\n\r\n    /**\r\n     * Llamar a google auth para establecer ususario\r\n     */\r\n    const login = async () => {\r\n        let drawer = await googleAuth(setUser);\r\n        setDrawerItems(drawer);\r\n        setLoad(false);\r\n    };\r\n\r\n    /**\r\n     * Mensaje de confirmación para cerrar sesión\r\n     */\r\n    const logout = () => {\r\n        Swal.fire({\r\n            text: \"¿Seguro que deseas cerrar sesión?\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"var(--success)\",\r\n            cancelButtonColor: \"var(--error)\",\r\n            confirmButtonText: \"Si, seguro\",\r\n            cancelButtonText: \"Cancelar\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                setSelectedProject();\r\n                setLoad(true);\r\n                localStorage.removeItem(\"user\");\r\n                setUser(null);\r\n                setLoad(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Cambiar estado de usuario e iniciar sesion\r\n     */\r\n    async function changeState() {\r\n        login();\r\n    }\r\n\r\n    /**\r\n     * Actualizar arreglo de proyectos\r\n     */\r\n    const getProject = async () => {\r\n        let elements = await postLogin(user, setUser);\r\n        setDrawerItems(elements);\r\n        setLoad(false);\r\n    };\r\n\r\n    /**\r\n     * Llamar a la actualizacion de proyectos\r\n     */\r\n    async function get() {\r\n        getProject();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoad(false);\r\n        if (user || reloadSidebar) {\r\n            setLoad(true);\r\n            get();\r\n        }\r\n    }, [user, reloadSidebar]);\r\n\r\n    return (\r\n        <>\r\n            <Sidebar\r\n                items={drawerItems}\r\n                login={changeState}\r\n                logout={logout}\r\n                loader={load}\r\n                open={open}\r\n                setOpen={setOpen}\r\n                setShowUml={(value) => setShowUml(value)}\r\n            />\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                {selectedProject ? (\r\n                    <div>\r\n                        {showUml ? (\r\n                            <UML setShowUml={(value) => setShowUml(value)} />\r\n                        ) : (\r\n                            <Content />\r\n                        )}\r\n                        <Table />\r\n                    </div>\r\n                ) : null}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingLeft: theme.spacing(2),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginTop: 70,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 270,\r\n    },\r\n}));\r\n\r\nexport default Home;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\googleAuth.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Content\\Content.js",["408","409","410","411","412"],"// @ts-nocheck\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Content.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport CytoscapeComponent from \"react-cytoscapejs\";\r\n// import cytoscape from 'cytoscape';\r\n// import cise from 'cytoscape-cise';\r\nimport Loader from \"../Loader/Loader\";\r\nimport nodesHelper from \"../../helpers/nodes/nodes\";\r\n\r\n/**\r\n * Componente que representa el contenido\r\n * de la arquitectura seleccionada\r\n */\r\nconst Content = () => {\r\n  // cytoscape.use( cise );\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [elementos, setElementos] = useState();\r\n  const [load, setLoad] = useState(false);\r\n  const [composite2, setComposite2] = useState(false);\r\n  const [listT, setListT] = useState({nodes: ''});\r\n  const {\r\n    selectedProject,\r\n    cy, setCy,\r\n    selectedNodes, setSelectedNodes,\r\n    setSelectionModel,\r\n    composite\r\n  } = useContext(AppContext);\r\n\r\n    /**\r\n   * Obtener el tipo de relación\r\n   * @param {JSON} ele Objeto de cytoscape\r\n   * @returns String tipo de label\r\n   */\r\n  const getEdgeLabel = (ele) => {\r\n    if(!checked) return \"\";\r\n    switch (ele.scratch(\"relation\")) {\r\n      case \"implements\":\r\n        return \"Implementa\";\r\n      case \"extends\":\r\n        return \"Extiende\";\r\n      case \"use\":\r\n        return \"Usa\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n\r\n  /** Creacion de capa de estilos para el grafo segun Cytoscape */\r\n  var state = {\r\n    layout: {\r\n      name: 'circle',\r\n      fit: true,\r\n      padding: 30,\r\n      avoidOverlap: true,\r\n      nodeDimensionsIncludeLabels: true,\r\n      avoidOverlapPadding: 150,\r\n    },\r\n    layout2: {\r\n      name: 'circle',\r\n      clusters: listT,\r\n      fit: true,\r\n      padding: 30,\r\n      avoidOverlap: true,\r\n      nodeDimensionsIncludeLabels: true,\r\n      avoidOverlapPadding: 150,\r\n    },\r\n    stylesheet: [\r\n      {\r\n        selector: 'node',\r\n        style: {\r\n          content: 'data(id)',\r\n          'font-size': 20,\r\n          shape: 'round-rectangle',\r\n          'text-wrap': 'wrap',\r\n          'text-max-width': 80,\r\n          'text-valign': 'center',\r\n          'text-outline-color': '#18202C',\r\n          width: 270,\r\n          color: 'white',\r\n          height: 40,\r\n          'background-color': 'data(bg)',\r\n        },\r\n      },\r\n      {\r\n        selector: 'edge',\r\n        style: {\r\n          content: getEdgeLabel,\r\n          width: 4,\r\n          'font-size': 20,\r\n          'curve-style': 'bezier',\r\n          'edge-text-rotation': 'autorotate',\r\n          'target-arrow-shape': 'triangle-tee',\r\n          'text-valign': 'top',\r\n          'text-halign': 'center',\r\n          color: '#fff',\r\n          'text-outline-color': '#18202C',\r\n          'text-outline-width': 3,\r\n          'line-color': '#18202C',\r\n          'target-arrow-color': '#18202C',\r\n        },\r\n      },\r\n    ],\r\n    stylesheet2: [\r\n      {\r\n        selector: 'node',\r\n        style: {\r\n          content: 'data(id)',\r\n          'font-size': 20,\r\n          shape: 'round-rectangle',\r\n          'text-wrap': 'wrap',\r\n          'text-max-width': 80,\r\n          'text-valign': 'center',\r\n          width: 270,\r\n          color: 'white',\r\n          height: 40,\r\n          'background-color': 'data(bg)',\r\n        },\r\n      },\r\n      {\r\n        selector: 'edge',\r\n        style: {\r\n          content: getEdgeLabel,\r\n          width: 4,\r\n          'font-size': 20,\r\n          'curve-style': 'bezier',\r\n          'edge-text-rotation': 'autorotate',\r\n          'target-arrow-shape': 'triangle-tee',\r\n          'text-valign': 'top',\r\n          'text-halign': 'center',\r\n          color: '#fff',\r\n          'text-outline-color': '#18202C',\r\n          'text-outline-width': 3,\r\n          'line-color': '#18202C',\r\n          'target-arrow-color': '#18202C',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  /**\r\n   * Mostrar u ocultar el nombre de las\r\n   * relaciones entre los nodos\r\n   */\r\n  const setEdgesLabel = () => {\r\n    if (!checked) {\r\n      cy.style().selector(\"edge\").style({\r\n        content: \"\",\r\n      });\r\n    } else {\r\n      cy.style()\r\n        .selector(\"edge\")\r\n        .style({\r\n          content: getEdgeLabel\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manejador de evento al seleccionar nodo\r\n   * @param {Event} event referencia al elemento\r\n   */\r\n  const selectNodeHandler = (evt) => {\r\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\r\n    nodesHelper.addNode(\r\n      nodeId,\r\n      selectedNodes,\r\n      setSelectedNodes,\r\n      cy,\r\n      setSelectionModel\r\n    );\r\n    evt.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Manejador de evento al dejar de seleccionar nodo\r\n   * @param {Event} event referencia al elemento\r\n   */\r\n  const unselectNodeHandler = (evt) => {\r\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\r\n    const color = evt['target']['_private']['data'].bg;\r\n    nodesHelper.removeNode(\r\n      nodeId,\r\n      selectedNodes,\r\n      setSelectedNodes,\r\n      cy,\r\n      setSelectionModel,\r\n      color\r\n    );\r\n    nodesHelper.repaintEdges(selectedNodes, cy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cy) {\r\n      cy.on(\"select\", \"node\", selectNodeHandler);\r\n      cy.on(\"unselect\", \"node\", unselectNodeHandler);\r\n      setSelectionModel([]);\r\n      setSelectedNodes(new Set());\r\n    }\r\n  }, [cy]);\r\n\r\n  useEffect(() => {\r\n    if (cy) {\r\n      setEdgesLabel();\r\n    }\r\n  }, [checked, cy]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"ENTRO\")\r\n  //   if (composite) {\r\n  //     let composite_components = []\r\n  //     elementos.list_t.map((item) => {\r\n  //       composite_components.push(item.composite_component);\r\n  //     });\r\n  //     setListT(composite_components);\r\n  //     setComposite2(true)\r\n  //   }\r\n  // }, [composite]);\r\n\r\n  useEffect(()=>{\r\n\r\n  },[composite])\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    setElementos(selectedProject.elements);\r\n  }, [selectedProject]);\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      setLoad(false);\r\n      setChecked(false);\r\n    }\r\n  }, [elementos, load]);\r\n\r\n  return (\r\n    <>\r\n      {load ? (\r\n        <Loader />\r\n      ) : elementos ? (\r\n        <div>\r\n          <div className={classes.onClose}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={checked}\r\n                  onChange={() => setChecked((prev) => !prev)}\r\n                />\r\n              }\r\n              labelPlacement=\"start\"\r\n              style={{ marginRight: 5 }}\r\n              label=\"\"\r\n            />\r\n          </div>\r\n\r\n          <CytoscapeComponent\r\n            className=\"component\"\r\n            cy={(cyt) => {\r\n              setCy(cyt);\r\n            }}\r\n            elements={CytoscapeComponent.normalizeElements(elementos)}\r\n            id=\"component\"\r\n            layout={state.layout}\r\n            maxZoom={2}\r\n            pan={{ x: 150, y: 30 }}\r\n            stylesheet={state.stylesheet}\r\n            zoom={0.5}\r\n          />\r\n        </div>\r\n      )\r\n      // : elementos && composite2 ? (\r\n      //   <CytoscapeComponent\r\n      //       className=\"component\"\r\n      //       cy={(cyt) => {\r\n      //         setCy(cyt);\r\n      //       }}\r\n      //       elements={CytoscapeComponent.normalizeElements(elementos)}\r\n      //       id=\"component\"\r\n      //       layout={state.layout2}\r\n      //       maxZoom={2}\r\n      //       pan={{ x: 150, y: 30 }}\r\n      //       stylesheet={state.stylesheet2}\r\n      //       zoom={0.5}\r\n      //     />\r\n      // )\r\n      : null }\r\n    </>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  onClose: {\r\n    position: \"absolute\",\r\n    right: \"18px\",\r\n    top: \"75px\",\r\n    zIndex: 3,\r\n  },\r\n}));\r\n\r\nexport default Content;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Table\\Table.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\login.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SideBar\\Sidebar.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Loader\\Loader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\TableItem.js",["413"],"// @ts-nocheck\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\n\r\nimport EdgesTable from \"./Edges/Edges\";\r\nimport NodesTable from \"./Nodes/Nodes\";\r\nimport CompositeComponentTable from './CompositeComponent/CompositeComponent';\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n/**\r\n * Componente que representa al contenedor\r\n * de cada panel en las tabs\r\n */\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={2}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n/**\r\n * Manejador de props para cada tab\r\n * @param {int} index tab actual seleccionada\r\n */\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n/**\r\n * Componente que representa\r\n * al contenedor de las tablas\r\n * para manejo de nodos y aristas\r\n */\r\nconst TableItem = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n\r\n  /**\r\n   * Manejador de eventos sobre\r\n   * cambios en tabs\r\n   * @param {Event} event\r\n   * @param {int} newValue nuevo indice\r\n   */\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  /**\r\n   * Manejador de eventos sobre\r\n   * cambios en el indice de las tabs\r\n   * @param {int} index nuevo indice\r\n   */\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Nodos\" {...a11yProps(0)} />\r\n          <Tab label=\"Relaciones\" {...a11yProps(1)} />\r\n          <Tab label=\"Componentes Compuestos\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <NodesTable closeDrawable={(value) => props.closeDrawable(value)} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <EdgesTable />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <CompositeComponentTable\r\n            closeDrawable={(value) => props.closeDrawable(value)}\r\n          />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"auto\",\r\n    zIndex: -1\r\n  },\r\n  inputs: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  inputAlign: {\r\n    marginRight: theme.spacing(1.5),\r\n  }\r\n}));\r\n\r\nexport default TableItem;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\LoginButton\\LoginButton.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarHeader\\SidebarHeader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarItem\\SidebarItem.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Navbar\\Navbar.js",["414"],"import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { manageCreateVersion, manageDeleteVersion, manageEditVersion } from \"../../helpers/versions/versions\";\r\nimport { downloadGraph } from \"../../helpers/content/downloader\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AppContext from \"../../auth/context/context\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CreateIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Excel from \"../Excel/ExcelDownloader\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Modal from \"../FileReader/FileReader\";\r\nimport nodeHelper from \"../../helpers/nodes/nodes\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport NavbarItem from \"../NavbarItem/NavbarItem\";\r\n\r\n/**\r\n * Componente que representa la barra\r\n * superior de navegacion\r\n */\r\nconst Navbar = ({ open, setOpen }) => {\r\n    const classes = useStyles();\r\n    const { user, selectedProject, setSelectedProject, setReloadSidebar, cy } = useContext(AppContext);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    /**\r\n     * Cerrar proyecto seleccionado\r\n     */\r\n    const onClose = () => {\r\n        Swal.fire({\r\n            text: \"¿Seguro que deseas cerrar \" + selectedProject.versionName + \"?\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"var(--success)\",\r\n            cancelButtonColor: \"var(--error)\",\r\n            confirmButtonText: \"Si, seguro\",\r\n            cancelButtonText: \"Cancelar\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                setSelectedProject();\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => setOpen(true)}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    {selectedProject ? (\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                width: \"100%\",\r\n                                justifyContent: \"space-between\",\r\n                            }}\r\n                        >\r\n                            <div className={classes.title}>\r\n                                <h1 className={classes.h1} style={{ marginLeft: 0, minWidth: 145 }}>\r\n                                    {selectedProject.versionName}\r\n                                </h1>\r\n                                <IconButton\r\n                                    aria-label=\"open edit\"\r\n                                    className={classes.icon}\r\n                                    onClick={() =>\r\n                                        manageEditVersion(user, selectedProject, setSelectedProject, setReloadSidebar)\r\n                                    }\r\n                                >\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                                {selectedProject.versions > 1 ? (\r\n                                    <IconButton\r\n                                        aria-label=\"open delete\"\r\n                                        className={classes.icon}\r\n                                        onClick={() =>\r\n                                            manageDeleteVersion(\r\n                                                user,\r\n                                                selectedProject,\r\n                                                setSelectedProject,\r\n                                                setReloadSidebar\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                ) : null}\r\n                            </div>\r\n                            <div style={{ textAlign: \"right\" }}>\r\n                                <NavbarItem\r\n                                    icon={<GetAppIcon />}\r\n                                    title={\"Descargar\"}\r\n                                    aria_controls={\"simple-menu\"}\r\n                                    aria_haspopup={\"true\"}\r\n                                    onClick={handleClick}\r\n                                />\r\n                                <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                    PaperProps={{\r\n                                        style: {\r\n                                            padding: 10,\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    <Excel\r\n                                        fileName={selectedProject.versionName}\r\n                                        nodesData={nodeHelper.getNodeData(selectedProject)}\r\n                                        relationsData={nodeHelper.getRelationData(selectedProject)}\r\n                                    />\r\n                                    <MenuItem onClick={() => downloadGraph(\"jpg\", cy, selectedProject.versionName)}>\r\n                                        Descargar JPG\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={() => downloadGraph(\"png\", cy, selectedProject.versionName)}>\r\n                                        Descargar PNG\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                                <NavbarItem\r\n                                    icon={<CreateIcon />}\r\n                                    title={\"Crear nueva versión\"}\r\n                                    aria_controls={\"simple-menu\"}\r\n                                    aria_haspopup={\"false\"}\r\n                                    onClick={() => manageCreateVersion(user, selectedProject, setReloadSidebar)}\r\n                                />\r\n                                <NavbarItem\r\n                                    icon={<AddIcon />}\r\n                                    aria_controls={\"simple-menu\"}\r\n                                    aria_haspopup={\"false\"}\r\n                                    title={\"Agregar elementos\"}\r\n                                    onClick={() => setShowModal(true)}\r\n                                />\r\n\r\n                                <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={onClose} edge=\"start\">\r\n                                    <HighlightOffIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n            {showModal ? (\r\n                <Modal\r\n                    open={showModal}\r\n                    onClose={() => setShowModal(false)}\r\n                    projectIndex={selectedProject.projectIndex}\r\n                    type={\"Elementos\"}\r\n                />\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        color: \"var(--background)\",\r\n    },\r\n\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        minWidth: 200,\r\n        flexShrink: 0,\r\n        backgroundColor: \"var(--primaryDark)\",\r\n    },\r\n\r\n    title: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"nowrap\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    h1: {\r\n        color: \"var(--background)\",\r\n        margin: \"auto\",\r\n        fontFamily: \"var(font-family-content)\",\r\n        display: \"inline\",\r\n        paddingRight: 16,\r\n        fontSize: 24,\r\n    },\r\n\r\n    icon: {\r\n        color: \"var(--background)\",\r\n        paddingRight: 0,\r\n        paddingLeft: 5,\r\n    },\r\n}));\r\n\r\nexport default Navbar;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\nodes\\nodes.js",["415"],"/**\r\n * Agregar un nodo al set\r\n * @param {String} id ID del nodo\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst addNode = (\r\n  id,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const temp = selectedNodes;\r\n  temp.add(id);\r\n  setSelectedNodes(temp);\r\n  setSelectionModel([...temp]);\r\n  changeNodeColor(cy, id, \"add\");\r\n  const edges = getEdges(cy, id);\r\n  changeEdgesColor(cy, edges, \"add\");\r\n};\r\n\r\n/**\r\n * Eliminar un nodo del set\r\n * @param {String} id ID del nodo\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst removeNode = (\r\n  id,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel,\r\n  color\r\n) => {\r\n  const temp = selectedNodes;\r\n  temp.delete(id);\r\n  setSelectedNodes(temp);\r\n  setSelectionModel([...temp]);\r\n  changeNodeColor(cy, id, \"remove\", color);\r\n  const edges = getEdges(cy, id);\r\n  changeEdgesColor(cy, edges, \"remove\");\r\n};\r\n\r\n/**\r\n * Manejar acción al hacer click en una\r\n * celda de la tabla\r\n * @param {String} nodeId\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst manageCellClick = (\r\n  nodeId,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  if (selectedNodes.has(nodeId)) {\r\n    removeNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = false;\r\n    repaintEdges(selectedNodes, cy);\r\n  } else {\r\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\r\n  }\r\n};\r\n\r\n/**\r\n * Cambiar el color del nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} nodeId ID del nodo\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeNodeColor = (cy, nodeId, type, color) => {\r\n  const backgroundColor = type === \"remove\" ? color : \"#ffc74d\";\r\n  cy.getElementById(nodeId).animate(\r\n    {\r\n      style: {\r\n        \"background-color\": backgroundColor,\r\n      },\r\n    },\r\n    {\r\n      duration: 0,\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Obtener todas las aristas de\r\n * un nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} nodeId ID del nodo\r\n * @returns arreglo de objetos con info de aristas\r\n */\r\nconst getEdges = (cy, nodeId) => {\r\n  return cy.getElementById(nodeId).connectedEdges();\r\n};\r\n\r\n/**\r\n * Manejar el cambio de color de todas las aristas\r\n * de un nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Array} edges Arreglo de objetos con info de aristas\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeEdgesColor = (cy, edges, type) => {\r\n  edges.forEach((edge) => {\r\n    const edgeId = edge[\"_private\"][\"data\"].id;\r\n    changeEdgeColor(cy, edgeId, type);\r\n  });\r\n};\r\n\r\n/**\r\n * Cambiar el color de una arista\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} edgeId ID de la arista\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeEdgeColor = (cy, edgeId, type) => {\r\n  const backgroundColor = type === \"remove\" ? \"#18202C\" : \"#ffc74d\";\r\n  cy.getElementById(edgeId).style({\r\n    \"line-color\": backgroundColor,\r\n    \"target-arrow-color\": backgroundColor,\r\n  });\r\n};\r\n\r\n/**\r\n * Manejar selección de columna de nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst manageCheckSelection = (\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const nodes = cy.filter(\"nodes\");\r\n  if (selectedNodes.size > 0) {\r\n    removeAllNodes(selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n  } else {\r\n    addAllNodes(nodes, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n  }\r\n};\r\n\r\n/**\r\n * Deseleccionar todos los nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst removeAllNodes = (\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  selectedNodes.forEach((node) => {\r\n    removeNode(node, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(node)[\"_private\"][\"selected\"] = false;\r\n  });\r\n};\r\n\r\n/**\r\n * Seleccionar todos los nodos\r\n * @param {Array} nodeArray Arreglo de nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst addAllNodes = (\r\n  nodeArray,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  nodeArray.forEach((node) => {\r\n    const nodeId = node[\"_private\"][\"data\"].id;\r\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\r\n  });\r\n};\r\n\r\n/**\r\n * Repintar las aristas\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n */\r\nconst repaintEdges = (selectedNodes, cy) => {\r\n  selectedNodes.forEach((node) => {\r\n    const edges = getEdges(cy, node);\r\n    changeEdgesColor(cy, edges);\r\n  });\r\n};\r\n\r\n/**\r\n * Conseguir todos los nodos del proyecto\r\n * actualmente abierto\r\n * @param {JSON} selectedProject Objeto con información del proyecto actual\r\n * @returns Arreglo de objetos de tipo nodo\r\n */\r\nconst getNodeData = (selectedProject) => {\r\n  return selectedProject.elements.nodes.map((node, index) => ({\r\n    id: index,\r\n    name: node.data.name,\r\n    module: node.data.module,\r\n    incomompleteProperties: node.data.incomompleteProperties,\r\n    composite: node.data.composite ?? '-',\r\n  }));\r\n};\r\n\r\n/**\r\n * Conseguir todas las relaciones existentes\r\n * del proyecto actualmente abierto\r\n * @param {JSON} selectedProject Objeto con información del proyecto actual\r\n * @returns Arreglo de objetos de tipo aristas\r\n */\r\nconst getRelationData = (selectedProject) => {\r\n  return selectedProject.elements.edges?.map((edge, index) => {\r\n    return {\r\n      id: index,\r\n      source: edge.data.source,\r\n      target: edge.data.target,\r\n      relation: getRelationType(edge.scratch.relation),\r\n      index: edge.scratch?.index || '-',\r\n      dms: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.DMS.value\r\n        : 'No Calculado',\r\n      abstractness: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.abstractness?.value\r\n        : 'No Calculado',\r\n      coupling: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.coupling.value\r\n        : 'No Calculado',\r\n      instability: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.instability?.value\r\n        : 'No Calculado',\r\n      nameRessemblance: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.nameRessemblance?.value\r\n        : 'No Calculado',\r\n      packageMapping: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.packageMapping?.value\r\n        : 'No Calculado',\r\n      overall_q: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.overall_score_q?.value\r\n        : 'No Calculado',\r\n    };\r\n  })\r\n};\r\n\r\n/**\r\n * Obtener el nombre de una relación\r\n * @param {String} relation Tipo de relación\r\n * @returns Nombre de la relación\r\n */\r\nconst getRelationType = (relation) => {\r\n  switch (relation) {\r\n    case \"implements\":\r\n      return \"Implementación\";\r\n    case \"extends\":\r\n      return \"Extensión\";\r\n    case \"use\":\r\n      return \"Use\"\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default {\r\n  addNode,\r\n  manageCellClick,\r\n  manageCheckSelection,\r\n  getNodeData,\r\n  getRelationData,\r\n  removeNode,\r\n  repaintEdges,\r\n};\r\n\r\nexport {\r\n  repaintEdges\r\n}\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\FileReader\\FileReader.js",["416"],"import React, { useContext, useState } from \"react\";\r\nimport \"./FileReader.css\";\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\r\nimport { submitArchitecture } from \"../../helpers/architecture/architecture\";\r\nimport { manageElementsSubmit } from \"../../helpers/elements/elements\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { manageErrors } from \"../../helpers/errors/errors\";\r\n\r\n/**\r\n * Componente que representa pop-up\r\n * para añadir archivos\r\n */\r\nconst FileReader = ({ onClose, open, projectIndex, type }) => {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState(\"\");\r\n    const [valid, setValid] = useState(true);\r\n    const [loader, setLoader] = useState(false);\r\n    const { user, setReloadSidebar, selectedProject, setSelectedProject } =\r\n        useContext(AppContext);\r\n\r\n    /**\r\n     * Manejar acción en base al tipo de data a subir a\r\n     * la base de datos\r\n     * @param {Array} allFiles arreglo que contiene todos los archivos XML\r\n     */\r\n    const handleSubmit = async (allFiles) => {\r\n        var response;\r\n        setLoader(true);\r\n        switch (type.toLowerCase()) {\r\n            case \"arquitectura\":\r\n                if (name !== \"\") {\r\n                    setLoader(true);\r\n                    response = await manageArchitectureSubmit(allFiles);\r\n                    manageResponse(response);\r\n                    break;\r\n                } else {\r\n                    setValid(false);\r\n                    break;\r\n                }\r\n            case \"elementos\":\r\n                setLoader(true);\r\n                manageElementsSubmit(\r\n                    user,\r\n                    allFiles,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    setReloadSidebar\r\n                );\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Manejar los modals a mostrar en base a\r\n     * la respuesta obtenida de la API\r\n     * @param {JSON} response respuesta de la llamada a la API\r\n     */\r\n    const manageResponse = (response) => {\r\n        setReloadSidebar(false);\r\n        if (Number.isInteger(response)) {\r\n            manageErrors(response);\r\n        } else {\r\n            ModalMessage(\"¡Arquitectura creada!\", \" \", \"success\", false, 4000);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Llamada a la API para agregar una nueva arquitectura\r\n     * @param {Array} allFiles arreglo que contiene todos los archivos XML\r\n     * @returns JSON de la respuesta de la API\r\n     */\r\n    const manageArchitectureSubmit = async (allFiles) => {\r\n        const response = await submitArchitecture(\r\n            allFiles,\r\n            user,\r\n            name,\r\n            projectIndex,\r\n            setReloadSidebar\r\n        );\r\n        return response;\r\n    };\r\n\r\n    /**\r\n     * Actualizar el nombre según se actualice el TextField\r\n     * @param {Event} event objeto de tipo evento\r\n     */\r\n    const handleChange = (event) => {\r\n        setValid(true);\r\n        setName(event.target.value);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (loader) {\r\n            setTimeout(setLoader(false), 5000);\r\n            onClose();\r\n        }\r\n    }, [loader]);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={onClose}\r\n            >\r\n                <div className={classes.paper}>\r\n                    {loader ? (\r\n                        <Loader />\r\n                    ) : (\r\n                        <>\r\n                            <div>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={onClose}\r\n                                    className={classes.onClose}\r\n                                    edge=\"start\"\r\n                                >\r\n                                    <HighlightOffIcon />\r\n                                </IconButton>\r\n                                <h2 className={classes.h1}>\r\n                                    Agregar prueba {type}\r\n                                </h2>\r\n                            </div>\r\n\r\n                            {type.toLowerCase() === \"arquitectura\" ? (\r\n                                <>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Nombre prueba\"\r\n                                        value={name}\r\n                                        onChange={handleChange}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    {!valid ? (\r\n                                        <div className={classes.validacion}>\r\n                                            * El nombre de la arquitectura es\r\n                                            obligatorio{\" \"}\r\n                                        </div>\r\n                                    ) : null}\r\n                                </>\r\n                            ) : null}\r\n                            <Dropzone\r\n                                onSubmit={handleSubmit}\r\n                                styles={{\r\n                                    dropzone: {\r\n                                        maxHeight: 200,\r\n                                        maxWidth: 400,\r\n                                    },\r\n                                    dropzoneReject: {\r\n                                        borderColor: \"red\",\r\n                                        backgroundColor: \"#DAA\",\r\n                                    },\r\n                                    inputLabel: (files, extra) =>\r\n                                        extra.reject ? { color: \"red\" } : {},\r\n                                }}\r\n                                accept=\"text/xml\"\r\n                                inputContent={(files, extra) =>\r\n                                    extra.reject\r\n                                        ? \"Solo cargar archivos .xml\"\r\n                                        : \"Agrega archivos o hacer clic para buscar\"\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        top: \"24%\",\r\n        left: \"23%\",\r\n        width: \"60%\",\r\n        minHeight: 300,\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        border: \"none\",\r\n        borderRadius: 8,\r\n        background: \"var(--background)\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: \"1.25rem\",\r\n        outline: \"none\",\r\n        animationDuration: \"0.3s\",\r\n        animationTimingFunction: \"ease\",\r\n        animationDelay: \"0s\",\r\n        animationIterationCount: 1,\r\n        animationDirection: \"normal\",\r\n        animationFillMode: \"none\",\r\n        animationPlayState: \"running\",\r\n    },\r\n    h1: {\r\n        color: \"var(--primaryDark)\",\r\n        margin: \"auto\",\r\n        marginBottom: 35,\r\n        fontSize: \"1.875rem\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"var(font-family-content)\",\r\n    },\r\n    validacion: {\r\n        color: \"var(--error)\",\r\n        fontSize: 13,\r\n        margin: 5,\r\n    },\r\n    onClose: {\r\n        position: \"relative\",\r\n        left: \"98%\",\r\n        top: \"-9px\",\r\n        backgroundColor: \"var(primaryDark)\",\r\n        paddingTop: 0,\r\n        paddingRight: 0,\r\n        paddingBottom: 0,\r\n    },\r\n}));\r\n\r\nexport default FileReader;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\NavbarItem\\NavbarItem.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Excel\\ExcelDownloader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\errors\\errors.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\elements\\elements.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\ModalMessage\\ModalMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\architecture\\architecture.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SelectMessage\\SelectMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\EditMessage\\EditMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\DeleteMessage\\DeleteMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\architecture\\architecture.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\elements\\elements.js",["417"],"import { RestorePageRounded } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * Agregar/reemplazar nuevos elementos a una arquitectura\r\n * en la base de datos del usuario\r\n * @param {FormData} formData objeto form-data con la información de los elementos\r\n */\r\nconst postElements = async (formData) => {\r\n    try {\r\n        const response = await axios.post(\"/elementos/\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\nconst postUpdatedElements = async (formData) => {\r\n    try {\r\n        const response = await axios.post(\"/updated-elements/\", formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\n/**\r\n * Llamada al Backend\r\n * Se encarga de crear la tabla de componentes compuestos\r\n * @param user referencia al usuario que está utilizando el proyecto\r\n * @param selectedProject referencia al proyecto seleccionado\r\n */\r\nconst ManageCreateCCBoard = async (user, selectedProject) => {\r\n    try {\r\n        const response = await axios.put(\"/create_cc_board/\", {\r\n            data: {\r\n                user_id: user.uid,\r\n                project_index: selectedProject.projectIndex,\r\n                arch_index: selectedProject.arcIndex,\r\n                ver_index: selectedProject.verIndex,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\n/**\r\n * Llamada al Backend\r\n * Se encarga de editar el aspecto (descripción) de un componente compuesto\r\n * @param name referencia al id del componente compuesto\r\n * @param description input del usuario\r\n */\r\nconst ManageEditCCDescription = async (user, selectedProject, name, description) => {\r\n    try {\r\n        const response = await axios.put(\"/edit_cc_description/\", {\r\n            data: {\r\n                user_id: user.uid,\r\n                project_index: selectedProject.projectIndex,\r\n                arch_index: selectedProject.arcIndex,\r\n                ver_index: selectedProject.verIndex,\r\n                name: name,\r\n                description: description,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\n/**\r\n * Llamada al Backend\r\n * (NO UTILIZADO) Se encarga de cambiar el ID de un componente compuesto\r\n * @param name nombre previo a la actualización del componente compuesto\r\n * @param inputValue input del usuario, nuevo nombre del componente compuesto\r\n */\r\nconst ManageEditCCName = async (user, selectedProject, name, inputValue) => {\r\n    try {\r\n        const response = await axios.put(\"/edit_cc_name/\", {\r\n            data: {\r\n                user_id: user.uid,\r\n                project_index: selectedProject.projectIndex,\r\n                arch_index: selectedProject.arcIndex,\r\n                ver_index: selectedProject.verIndex,\r\n                old_name: name,\r\n                new_name: inputValue,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\n/**\r\n * Llamada al Backend\r\n * Se encarga de cambiar el componente compuesto de un nodo\r\n * @param id nombre/id del nodo\r\n * @param compositeComponent nombre del componente al que se desea cambiar el nodo\r\n */\r\nconst ManageEditNodeCC = async (user, selectedProject, id, compositeComponent) => {\r\n    try {\r\n        const response = await axios.put(\"/edit_node_cc/\", {\r\n            data: {\r\n                user_id: user.uid,\r\n                project_index: selectedProject.projectIndex,\r\n                arch_index: selectedProject.arcIndex,\r\n                ver_index: selectedProject.verIndex,\r\n                node: id,\r\n                new_name: compositeComponent,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\n/**\r\n * Llamada al Backend\r\n * Se encarga de editar la descripción de un nodo\r\n * @param node_id nombre/id del nodo\r\n * @param inputValue descripcion del nodo\r\n */\r\nconst ManageEditNodeDesc = async (user, selectedProject, node_id, inputValue) => {\r\n    try {\r\n        const response = await axios.put(\"/edit_node_desc/\", {\r\n            data: {\r\n                user_id: user.uid,\r\n                project_index: selectedProject.projectIndex,\r\n                arch_index: selectedProject.arcIndex,\r\n                ver_index: selectedProject.verIndex,\r\n                node_id: node_id,\r\n                new_name: inputValue,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error.response.status;\r\n    }\r\n};\r\n\r\nexport {\r\n    postElements,\r\n    postUpdatedElements,\r\n    ManageCreateCCBoard,\r\n    ManageEditCCDescription,\r\n    ManageEditCCName,\r\n    ManageEditNodeCC,\r\n    ManageEditNodeDesc,\r\n};\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\content\\downloader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\versions\\versions.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\versions\\versions.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\projects\\projects.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Menu\\Menu.js",["418","419","420","421"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Nodes\\Nodes.js",["422","423","424","425"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AppContext from \"../../../auth/context/context\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\r\nimport { postUpdatedElements, ManageEditNodeCC, ManageEditNodeDesc } from \"../../../api/elements/elements\";\r\nimport { manageUpdatedResponse } from \"../../../helpers/elements/elements\";\r\n\r\n/**\r\n * Componente que representa\r\n * la tabla de nodos del proyecto selecionado\r\n */\r\nconst NodesTable = (props) => {\r\n    const {\r\n        user,\r\n        selectedProject,\r\n        selectedNodes,\r\n        setSelectedNodes,\r\n        selectionModel,\r\n        setSelectionModel,\r\n        setSelectedProject,\r\n        cy,\r\n    } = useContext(AppContext);\r\n    let [loader, setLoader] = useState(true);\r\n\r\n    let rows = selectedProject.elements.nodes.map((node) => {\r\n        return {\r\n            id: node.data.id,\r\n            name: node.data.name,\r\n            isInterface: !node.data.incomompleteProperties ? (node.data.isInterface ? \"Si\" : \"No\") : \"-\",\r\n            isAbstract: node.data.hasOwnProperty(\"isAbstract\") ? (node.data.isAbstract ? \"Si\" : \"No\") : \"-\",\r\n            module: node.data.hasOwnProperty(\"module\") ? node.data.module : \"-\",\r\n            incomompleteProperties: node.data.incomompleteProperties ? \"No\" : \"Si\",\r\n            composite: node.data.hasOwnProperty(\"composite\") ? node.data.composite : \"-\",\r\n            description: node.data.hasOwnProperty(\"description\") ? node.data.description : \"none\",\r\n        };\r\n    });\r\n\r\n    const columns = [\r\n        { field: \"name\", headerName: \"Nombre\", width: 240 },\r\n        { field: \"description\", headerName: \"Funcionalidad\", width: 240 },\r\n        {\r\n            field: \"change_desc\",\r\n            headerName: \"Cambiar funcionalidad\",\r\n            sortable: false,\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <IconButton aria-label=\"edit\" size=\"large\">\r\n                            <EditIcon\r\n                                fontSize=\"inherit\"\r\n                                color=\"secondary\"\r\n                                onClick={(e) => {\r\n                                    props.closeDrawable(false);\r\n                                    onClick(e, params);\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        { field: \"composite\", headerName: \"Componente Compuesto\", width: 240 },\r\n        {\r\n            field: \"action\",\r\n            headerName: \"Cambiar el Nodo de Componente Compuesto\",\r\n            sortable: false,\r\n            width: 120,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <IconButton aria-label=\"add\" size=\"large\">\r\n                            <EditIcon\r\n                                fontSize=\"inherit\"\r\n                                color=\"primary\"\r\n                                onClick={(e) => {\r\n                                    props.closeDrawable(false);\r\n                                    onClickAdd(e, params);\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        { field: \"isInterface\", headerName: \"Es Interfaz?\", width: 180 },\r\n        { field: \"isAbstract\", headerName: \"Es Abstracto?\", width: 180 },\r\n        { field: \"module\", headerName: \"Modulo\", width: 180 },\r\n        {\r\n            field: \"incomompleteProperties\",\r\n            headerName: \"Propiedades Completas\",\r\n            width: 230,\r\n        },\r\n    ];\r\n\r\n    const onClick = async (e, params) => {\r\n        e.stopPropagation(); // don't select this row after clicking\r\n\r\n        const api = params.api;\r\n        const thisRow = {};\r\n        let txtTitle;\r\n        let name = \"\";\r\n        let node_id;\r\n\r\n        api.getAllColumns()\r\n            .filter((c) => c.field !== \"__check__\" && !!c)\r\n            .forEach((c) => {\r\n                thisRow[c.field] = params.getValue(params.id, c.field);\r\n                if (c.field == \"name\") {\r\n                    node_id = params.getValue(params.id, c.field);\r\n                } else if (c.field == \"description\") {\r\n                    txtTitle = \"Inserte la funcionalidad de \" + node_id;\r\n                }\r\n            });\r\n\r\n        return Swal.fire({\r\n            title: txtTitle,\r\n            input: \"text\",\r\n            inputAttributes: {\r\n                autocapitalize: \"off\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Guardar\",\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (inputValue) => {\r\n                const res = await ManageEditNodeDesc(user, selectedProject, node_id, inputValue);\r\n                return res;\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading(),\r\n        }).then(async (result) => {\r\n            console.log(\"result\");\r\n            console.log(result);\r\n            if (result.isConfirmed) {\r\n                if (result.value.ok) {\r\n                    const formData = new FormData();\r\n                    formData.append(\"user_id\", user.uid);\r\n                    formData.append(\"ver_index\", selectedProject.verIndex);\r\n                    formData.append(\"arc_index\", selectedProject.arcIndex);\r\n                    formData.append(\"project_index\", selectedProject.projectIndex);\r\n\r\n                    const response = await postUpdatedElements(formData);\r\n                    console.log(\"responseeeeeee\");\r\n                    console.log(response);\r\n                    manageUpdatedResponse(response, selectedProject, setSelectedProject);\r\n\r\n                    Swal.fire(\"Cambiado con éxito!\", \"\", \"success\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const onClickAdd = async (e, params) => {\r\n        e.stopPropagation(); // don't select this row after clicking\r\n\r\n        const api = params.api;\r\n        const thisRow = {};\r\n        let id = \"\";\r\n        let options = {};\r\n        options[\"-\"] = \"-\";\r\n\r\n        api.getAllColumns()\r\n            .filter((c) => c.field !== \"__check__\" && !!c)\r\n            .forEach((c) => {\r\n                thisRow[c.field] = params.getValue(params.id, c.field);\r\n                console.log(c.field);\r\n                if (c.field == \"name\") {\r\n                    id = params.getValue(params.id, c.field);\r\n                }\r\n            });\r\n\r\n        for (let i = 0; i < selectedProject.elements.list_t.length; i++) {\r\n            const list_t = selectedProject.elements.list_t[i];\r\n            if (list_t.description !== \"\") {\r\n                options[list_t.description] = list_t.description;\r\n            } else {\r\n                options[list_t.name] = list_t.name;\r\n            }\r\n        }\r\n\r\n        console.log(\"options\");\r\n        console.log(options);\r\n\r\n        return Swal.fire({\r\n            title: \"Seleccione el componente al que desea mover el nodo\",\r\n            input: \"select\",\r\n            inputOptions: options,\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Guardar\",\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (compositeComponent) => {\r\n                const res = await ManageEditNodeCC(user, selectedProject, id, compositeComponent);\r\n                console.log(res);\r\n                return res;\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading(),\r\n        }).then(async (result) => {\r\n            //  console.log('result');\r\n            if (result.isConfirmed) {\r\n                if (result.value.ok) {\r\n                    // selectedProject.elements.nodes[];\r\n                    const formData = new FormData();\r\n                    formData.append(\"user_id\", user.uid);\r\n                    formData.append(\"ver_index\", selectedProject.verIndex);\r\n                    formData.append(\"arc_index\", selectedProject.arcIndex);\r\n                    formData.append(\"project_index\", selectedProject.projectIndex);\r\n\r\n                    const response = await postUpdatedElements(formData);\r\n                    console.log(\"responseeeeeee\");\r\n                    console.log(response);\r\n                    manageUpdatedResponse(response, selectedProject, setSelectedProject);\r\n\r\n                    Swal.fire(\"Cambiado con éxito!\", \"\", \"success\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [selectedProject.elements]);\r\n\r\n    return (\r\n        <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n            {!loader ? (\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    pageSize={50}\r\n                    checkboxSelection\r\n                    onCellClick={(params) => {\r\n                        nodeHelper.manageCellClick(\r\n                            params.row.name,\r\n                            selectedNodes,\r\n                            setSelectedNodes,\r\n                            cy,\r\n                            setSelectionModel\r\n                        );\r\n                    }}\r\n                    onColumnHeaderClick={(param) => {\r\n                        if (param.field === \"__check__\") {\r\n                            nodeHelper.manageCheckSelection(selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n                        }\r\n                    }}\r\n                    selectionModel={selectionModel}\r\n                />\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodesTable;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Edges\\Edges.js",["426","427","428"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport { ManageMetrics, ManageCombineMetrics, ManageCreateCompositeComponent } from \"../../../helpers/metrics/metrics\";\r\n\r\nimport AppContext from \"../../../auth/context/context\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\r\nimport \"./inputs.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { manageElementsUpdate } from \"../../../helpers/elements/elements\";\r\n\r\n/**\r\n * Componente que representa\r\n * la tabla de aristas del proyecto selecionado\r\n */\r\n\r\nconst EdgesTable = () => {\r\n    const { user, selectedProject, setSelectedProject, setComposite /* elements setReloadSidebar*/ } =\r\n        useContext(AppContext);\r\n    const [loader, setLoader] = useState(true);\r\n    const [loadingMetrics, setLoadingMetrics] = useState(false);\r\n    const [loadingComponents, setLoadingComponents] = useState(false);\r\n\r\n    const columns1 = [\r\n        { field: \"id\", headerName: \"ID\", width: 70 },\r\n        { field: \"source\", headerName: \"Origen\", width: 180 },\r\n        { field: \"target\", headerName: \"Destino\", width: 180 },\r\n        { field: \"relation\", headerName: \"Relación\", width: 150 },\r\n        { field: \"index\", headerName: \"Indice\", width: 150 },\r\n        { field: \"coupling\", headerName: \"Coupling\", width: 150 },\r\n        { field: \"abstractness\", headerName: \"Abstracción\", width: 180 },\r\n        { field: \"instability\", headerName: \"Inestabilidad\", width: 180 },\r\n        { field: \"dms\", headerName: \"DMS\", width: 150 },\r\n        {\r\n            field: \"nameRessemblance\",\r\n            headerName: \"Semejanza de Nombre\",\r\n            width: 180,\r\n        },\r\n        { field: \"packageMapping\", headerName: \"Mapeo de Paquetes\", width: 180 },\r\n        { field: \"overall_q\", headerName: \"Q\", width: 100 },\r\n    ];\r\n\r\n    // Getting the values of each input fields\r\n    const [dms, setDms] = useState(15);\r\n    const [nameResemblance, setNameResemblance] = useState(35);\r\n    const [packageMapping, setPackageMapping] = useState(25);\r\n    const [umbralName, setUmbralName] = useState(40);\r\n    const [umbralCoupling, setUmbralCoupling] = useState(0.45);\r\n    const [umbral, setUmbral] = useState(-0.1);\r\n    const [total, setTotal] = useState(0);\r\n    const [weighing, setWeighing] = useState({\r\n        dms: dms,\r\n        coupling: umbralCoupling,\r\n        name_resemblance: nameResemblance,\r\n        package_mapping: packageMapping,\r\n    });\r\n    const [render, setRender] = useState(false);\r\n    const [enable, setEnable] = useState(true);\r\n\r\n    // Calculate the sum total of all the input fields\r\n    function calculateTotal() {\r\n        const sum = dms + nameResemblance + packageMapping;\r\n        setTotal(sum);\r\n    }\r\n\r\n    // Getting all the nodes and mapping through each item\r\n    let nodesDos = selectedProject.elements.nodes.map((node) => {\r\n        return {\r\n            id: node.data.id,\r\n            name: node.data.name,\r\n            module: node.data.module,\r\n            incomompleteProperties: node.data.incomompleteProperties,\r\n        };\r\n    });\r\n\r\n    // Getting all the edges (relaciones)\r\n    let edgesDos = nodeHelper.getRelationData(selectedProject);\r\n\r\n    // For loop to get the Q and answer\r\n    function calculatelistas() {\r\n        ManageCreateCompositeComponent(user, selectedProject, umbral);\r\n        setComposite(true);\r\n    }\r\n\r\n    async function combineMetrics(setRender, render) {\r\n        const q = await ManageCombineMetrics(user, selectedProject, weighing);\r\n        setRender(!render);\r\n        return q;\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [selectedProject.elements]);\r\n\r\n    useEffect(() => {\r\n        manageElementsUpdate(user, selectedProject, setSelectedProject);\r\n\r\n        edgesDos = nodeHelper.getRelationData(selectedProject);\r\n    }, [render]);\r\n\r\n    useEffect(() => {\r\n        setWeighing({\r\n            dms: dms,\r\n            coupling: umbralCoupling,\r\n            name_resemblance: nameResemblance,\r\n            package_mapping: packageMapping,\r\n        });\r\n        return calculateTotal();\r\n    }, [dms, nameResemblance, packageMapping, umbralCoupling]);\r\n\r\n    return (\r\n        <div style={{ height: \"80vh\", width: \"100%\", overflow: \"scroll\" }}>\r\n            <div className=\"form-wrapper\">\r\n                <form className=\"form-styles\">\r\n                    <div className=\"input\">\r\n                        <div className=\"buttons\">\r\n                            {!loadingMetrics ? (\r\n                                <Button\r\n                                    className=\"btn-total\"\r\n                                    onClick={async () => {\r\n                                        setLoadingMetrics(true);\r\n                                        calculateTotal();\r\n                                        await ManageMetrics(user, selectedProject, umbralName);\r\n                                        setEnable(false);\r\n                                        setLoadingMetrics(false);\r\n                                    }}\r\n                                >\r\n                                    Calcular Metricas\r\n                                </Button>\r\n                            ) : (\r\n                                <Loader />\r\n                            )}\r\n                            {!loadingComponents ? (\r\n                                <Button\r\n                                    className=\"btn-total\"\r\n                                    disabled={enable}\r\n                                    onClick={async () => {\r\n                                        setLoadingComponents(true);\r\n                                        await combineMetrics(setRender, render);\r\n                                        await calculatelistas();\r\n                                        // await axios.put('/create_cc_board/', {\r\n                                        //  data: {\r\n                                        //   user_id: user.uid,\r\n                                        //   project_index: selectedProject.projectIndex,\r\n                                        //   arch_index: selectedProject.arcIndex,\r\n                                        //   ver_index: selectedProject.verIndex,\r\n                                        //  }\r\n\r\n                                        // });\r\n                                        setEnable(true);\r\n                                        setLoadingComponents(false);\r\n                                    }}\r\n                                >\r\n                                    Unir Componentes\r\n                                </Button>\r\n                            ) : (\r\n                                <Loader />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"input-align\">\r\n                            <input\r\n                                value={dms}\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    setDms(+e.target.value);\r\n                                    calculateTotal();\r\n                                }}\r\n                                className=\"input-styles\"\r\n                                placeholder=\"ejm. 15\"\r\n                                name=\"dms\"\r\n                            />\r\n                            <label className=\"input-label\">Peso DMS</label>\r\n                        </div>\r\n                        <div className=\"input-align\">\r\n                            <input\r\n                                className=\"input-styles\"\r\n                                placeholder=\"ejm. 35\"\r\n                                name=\"paquete\"\r\n                                value={packageMapping}\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    setPackageMapping(+e.target.value);\r\n                                    calculateTotal();\r\n                                }}\r\n                            />\r\n                            <label className=\"input-label\">Peso Mapeo de Paquete</label>\r\n                        </div>\r\n                        <div className=\"input-align-umbral\">\r\n                            <input\r\n                                className=\"input-styles-umbral\"\r\n                                placeholder=\"ejm. 0.45\"\r\n                                name=\"umbralS\"\r\n                                value={nameResemblance}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    setNameResemblance(Number(e.target.value));\r\n                                }}\r\n                            />\r\n                            <label className=\"input-label\">Peso Semejanza de Nombre</label>\r\n                        </div>\r\n                        <div className=\"input-align-umbral\">\r\n                            <input\r\n                                className=\"input-styles-umbral\"\r\n                                placeholder=\"ejm. 0.45\"\r\n                                name=\"umbralS\"\r\n                                value={umbralName}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    setUmbralName(Number(e.target.value));\r\n                                }}\r\n                            />\r\n                            <label className=\"input-label\">Umbral Semejanza</label>\r\n                        </div>\r\n                        <div className=\"input-align-umbral\">\r\n                            <input\r\n                                className=\"input-styles-umbral\"\r\n                                placeholder=\"ejm. 0.65\"\r\n                                name=\"umbralA\"\r\n                                value={umbralCoupling}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    setUmbralCoupling(Number(e.target.value));\r\n                                }}\r\n                            />\r\n                            <label className=\"input-label\">Umbral Acoplamiento</label>\r\n                        </div>\r\n                        <div className=\"input-align-umbral\">\r\n                            <input\r\n                                className=\"input-styles-umbral\"\r\n                                placeholder=\"Umbral\"\r\n                                name=\"umbralQ\"\r\n                                value={umbral}\r\n                                type=\"number\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    setUmbral(Number(e.target.value));\r\n                                }}\r\n                            />\r\n                            <label className=\"input-label\">Umbral Q</label>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"total-sum\">\r\n                <p>\r\n                    Total:<span>{total}</span>\r\n                </p>\r\n            </div>\r\n            {/* {total <= 100 ? (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          El total de los pesos no puede ser mayor a 100 —{' '}\r\n          <strong>Vuelve a calcular!</strong>\r\n        </Alert>\r\n      ) : (\r\n        <Alert severity=\"success\">\r\n          <AlertTitle>Calculo Exitoso</AlertTitle>\r\n        </Alert>\r\n      )} */}\r\n            {!loader ? <DataGrid rows={edgesDos} columns={columns1} pageSize={50} /> : <Loader />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EdgesTable;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\projects\\projects.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\CompositeComponent\\CompositeComponent.js",["429","430","431"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton } from \"@mui/x-data-grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Swal from \"sweetalert2\";\r\nimport AppContext from \"../../../auth/context/context\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\r\nimport axios from \"axios\";\r\nimport { ManageCreateCCBoard, ManageEditCCDescription, postUpdatedElements } from \"../../../api/elements/elements\";\r\nimport { manageElementsUpdate, manageUpdatedResponse } from \"../../../helpers/elements/elements\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n/**\r\n * Componente que representa\r\n * la tabla de nodos del proyecto selecionado\r\n */\r\nconst CompositeComponentTable = (props) => {\r\n    const {\r\n        user,\r\n        selectedProject,\r\n        selectedNodes,\r\n        setSelectedNodes,\r\n        selectionModel,\r\n        setSelectionModel,\r\n        setSelectedProject,\r\n        cy,\r\n    } = useContext(AppContext);\r\n    let [loader, setLoader] = useState(true);\r\n    const [loadingComponents, setLoadingComponents] = useState(false);\r\n    const [render, setRender] = useState(false);\r\n\r\n    useEffect(() => {\r\n        manageElementsUpdate(user, selectedProject, setSelectedProject);\r\n    }, [render]);\r\n\r\n    let rows =\r\n        selectedProject?.elements.list_t?.map((list, index) => {\r\n            return {\r\n                id: index,\r\n                name: list.name ? list.name : \"-\",\r\n                color: list.bg ? list.bg : \"-\",\r\n                nodes: list.composite_component ? list.composite_component.join(\" \") : \"-\",\r\n                required_interface: list.required_interfaces ? list.required_interfaces : \"-\",\r\n                provided_interface: list.provided_interfaces ? list.provided_interfaces : \"-\",\r\n                description: list.description ? list.description : \"-\",\r\n            };\r\n        }) || [];\r\n\r\n    const columns = [\r\n        { field: \"name\", headerName: \"Nombre\", width: 98 },\r\n        {\r\n            field: \"color\",\r\n            headerName: \"Color\",\r\n            width: 98,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <Button\r\n                            style={{\r\n                                backgroundColor: params.getValue(params.id, \"color\"),\r\n                            }}\r\n                        />\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        { field: \"nodes\", headerName: \"Nodos\", width: 200 },\r\n        {\r\n            field: \"required_interface\",\r\n            headerName: \"Interfaz Requerida\",\r\n            width: 130,\r\n        },\r\n        {\r\n            field: \"provided_interface\",\r\n            headerName: \"Interfaz provista\",\r\n            width: 230,\r\n        },\r\n        {\r\n            field: \"description\",\r\n            headerName: \"Aspecto\",\r\n            width: 150,\r\n        },\r\n        {\r\n            field: \"action\",\r\n            headerName: \"Cambiar nombre del aspecto\",\r\n            sortable: false,\r\n            width: 150,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <>\r\n                        <IconButton aria-label=\"edit\" size=\"large\">\r\n                            <EditIcon\r\n                                fontSize=\"inherit\"\r\n                                color=\"secondary\"\r\n                                onClick={(e) => {\r\n                                    props.closeDrawable(false);\r\n                                    onClick(e, params);\r\n                                }}\r\n                            />\r\n                        </IconButton>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const onClick = async (e, params) => {\r\n        e.stopPropagation(); // don't select this row after clicking\r\n        const api = params.api;\r\n        const thisRow = {};\r\n        let name = \"\";\r\n\r\n        //console.log(params.getValue(params.id, 'name'));\r\n\r\n        api.getAllColumns()\r\n            .filter((c) => c.field !== \"__check__\" && !!c)\r\n            .forEach((c) => {\r\n                thisRow[c.field] = params.getValue(params.id, c.field);\r\n                //console.log(c.field);\r\n                if (c.field == \"name\") {\r\n                    name = params.getValue(params.id, c.field);\r\n                }\r\n            });\r\n\r\n        return Swal.fire({\r\n            title: \"Inserte la descripción del componente compuesto \" + name,\r\n            input: \"text\",\r\n            inputAttributes: {\r\n                autocapitalize: \"off\",\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Guardar\",\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: async (description) => {\r\n                const res = await ManageEditCCDescription(user, selectedProject, name, description);\r\n                return res;\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading(),\r\n        }).then(async (result) => {\r\n            //console.log('result');\r\n            //console.log(result);\r\n            if (result.isConfirmed) {\r\n                if (result.value.ok) {\r\n                    const formData = new FormData();\r\n                    formData.append(\"user_id\", user.uid);\r\n                    formData.append(\"ver_index\", selectedProject.verIndex);\r\n                    formData.append(\"arc_index\", selectedProject.arcIndex);\r\n                    formData.append(\"project_index\", selectedProject.projectIndex);\r\n\r\n                    const response = await postUpdatedElements(formData);\r\n                    //console.log('responseeeeeee');\r\n                    //console.log(response);\r\n                    manageUpdatedResponse(response, selectedProject, setSelectedProject);\r\n\r\n                    Swal.fire(\"Cambiado con éxito!\", \"\", \"success\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoader(false);\r\n    }, [selectedProject.elements]);\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <GridToolbarContainer>\r\n                <GridToolbarColumnsButton onResize={undefined} nonce={undefined} onResizeCapture={undefined} />\r\n                <GridToolbarFilterButton nonce={undefined} onResize={undefined} onResizeCapture={undefined} />\r\n            </GridToolbarContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {!loadingComponents ? (\r\n                    <Button\r\n                        className=\"btn-total\"\r\n                        onClick={async () => {\r\n                            setLoadingComponents(true);\r\n                            await ManageCreateCCBoard(user, selectedProject);\r\n                            setRender(!render);\r\n                            setLoadingComponents(false);\r\n                        }}\r\n                    >\r\n                        Calcular Interfaces\r\n                    </Button>\r\n                ) : (\r\n                    <Loader />\r\n                )}\r\n            </div>\r\n            <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n                {!loader ? (\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        getEstimatedRowHeight={() => 300}\r\n                        getRowHeight={() => \"auto\"}\r\n                        components={{ Toolbar: CustomToolbar }}\r\n                        sx={{\r\n                            \"&.MuiDataGrid-root--densityCompact .MuiDataGrid-cell\": {\r\n                                py: 1,\r\n                            },\r\n                            \"&.MuiDataGrid-root--densityStandard .MuiDataGrid-cell\": {\r\n                                py: \"15px\",\r\n                            },\r\n                            \"&.MuiDataGrid-root--densityComfortable .MuiDataGrid-cell\": {\r\n                                py: \"22px\",\r\n                            },\r\n                        }}\r\n                        columns={columns}\r\n                        pageSize={50}\r\n                        onCellClick={(params) => {\r\n                            nodeHelper.manageCellClick(\r\n                                params.row.name,\r\n                                selectedNodes,\r\n                                setSelectedNodes,\r\n                                cy,\r\n                                setSelectionModel\r\n                            );\r\n                        }}\r\n                        onColumnHeaderClick={(param) => {\r\n                            if (param.field === \"__check__\") {\r\n                                nodeHelper.manageCheckSelection(selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n                            }\r\n                        }}\r\n                        selectionModel={selectionModel}\r\n                    />\r\n                ) : (\r\n                    <Loader />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CompositeComponentTable;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\metrics\\metrics.js",["432","433","434","435"],"import React, { useContext } from \"react\";\r\nimport {\r\n  putMetrics,\r\n  combineMetrics,\r\n  compositeComponents,\r\n} from '../../api/metrics/metrics.js';\r\n\r\nimport AppContext from \"../../auth/context/context.js\"\r\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\r\n\r\n\r\n\r\n\r\nconst ManageMetrics = async (user, selectedProject, umbralName) => {\r\n    // setReloadSidebar(true);\r\n        await putMetrics(user,\r\n        selectedProject.projectIndex,\r\n        selectedProject.arcIndex,\r\n        selectedProject.verIndex,\r\n        umbralName);\r\n\r\n      // ModalMessage(\r\n      //   \"¡Metricas calculadas con exito!\",\r\n      //   \" \",\r\n      //   \"success\",\r\n      //   false,\r\n      //   4000\r\n      // );\r\n    //window.location.reload()\r\n  };\r\n\r\n\r\n  const ManageCombineMetrics = async (user, selectedProject, weighing) => {\r\n    await combineMetrics(\r\n      user,\r\n      selectedProject.projectIndex,\r\n      selectedProject.arcIndex,\r\n      selectedProject.verIndex,\r\n      weighing\r\n    );\r\n  }\r\n\r\n  const ManageCreateCompositeComponent = async (user, selectedProject, umbral_q) => {\r\n    await compositeComponents (\r\n      user,\r\n      selectedProject.projectIndex,\r\n      selectedProject.arcIndex,\r\n      selectedProject.verIndex,\r\n      umbral_q\r\n    )\r\n  }\r\n\r\n  export { ManageMetrics, ManageCombineMetrics, ManageCreateCompositeComponent};\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\metrics\\metrics.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\diagrams\\diagrams.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\index.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\reportWebVitals.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\App.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\firebase\\firebase-config.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\config\\settings\\settings.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\styles\\Global.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\screens\\Home\\Home.js",["436"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\UML\\UML.js",["437","438","439","440","441","442","443","444","445","446","447"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\auth\\context\\context.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\firebase\\googleAuth.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SideBar\\Sidebar.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Content\\Content.js",["448","449","450"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Table\\Table.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\login\\login.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\LoginButton\\LoginButton.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Loader\\Loader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarHeader\\SidebarHeader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Navbar\\Navbar.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarItem\\SidebarItem.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\TableItem.js",["451"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\nodes\\nodes.js",["452"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\CompositeComponent\\CompositeComponent.js",["453","454"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\Nodes\\Nodes.js",["455","456","457","458"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\TableItem\\Edges\\Edges.js",["459","460","461"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\elements\\elements.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\metrics\\metrics.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\elements\\elements.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\metrics\\metrics.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\ModalMessage\\ModalMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\errors\\errors.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\FileReader\\FileReader.js",["462"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Menu\\Menu.js",["463","464","465"],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\NavbarItem\\NavbarItem.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\Excel\\ExcelDownloader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\versions\\versions.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\content\\downloader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\projects\\projects.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\diagrams\\diagrams.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\helpers\\architecture\\architecture.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\DeleteMessage\\DeleteMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\EditMessage\\EditMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\projects\\projects.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\login\\versions\\versions.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\components\\SelectMessage\\SelectMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Prueba Tesis Fork\\F4_Front_Tesis\\src\\api\\architecture\\architecture.js",[],{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","severity":1,"message":"471","line":9,"column":8,"nodeType":"472","messageId":"473","endLine":9,"endColumn":13},{"ruleId":"474","severity":1,"message":"475","line":14,"column":6,"nodeType":"476","endLine":14,"endColumn":8,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":20,"column":48,"nodeType":"480","messageId":"481","endLine":20,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":22,"column":48,"nodeType":"480","messageId":"481","endLine":22,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":49,"column":48,"nodeType":"480","messageId":"481","endLine":49,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":52,"column":48,"nodeType":"480","messageId":"481","endLine":52,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":53,"column":33,"nodeType":"480","messageId":"481","endLine":53,"endColumn":35},{"ruleId":"478","severity":1,"message":"479","line":54,"column":53,"nodeType":"480","messageId":"481","endLine":54,"endColumn":55},{"ruleId":"482","severity":1,"message":"483","line":58,"column":26,"nodeType":"484","messageId":"485","endLine":58,"endColumn":28},{"ruleId":"478","severity":1,"message":"479","line":60,"column":41,"nodeType":"480","messageId":"481","endLine":60,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":62,"column":41,"nodeType":"484","messageId":"485","endLine":62,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":63,"column":41,"nodeType":"484","messageId":"485","endLine":63,"endColumn":43},{"ruleId":"474","severity":1,"message":"486","line":97,"column":8,"nodeType":"476","endLine":97,"endColumn":29,"suggestions":"487"},{"ruleId":"470","severity":1,"message":"488","line":26,"column":10,"nodeType":"472","messageId":"473","endLine":26,"endColumn":20},{"ruleId":"470","severity":1,"message":"489","line":26,"column":22,"nodeType":"472","messageId":"473","endLine":26,"endColumn":35},{"ruleId":"470","severity":1,"message":"490","line":27,"column":17,"nodeType":"472","messageId":"473","endLine":27,"endColumn":25},{"ruleId":"474","severity":1,"message":"491","line":207,"column":6,"nodeType":"476","endLine":207,"endColumn":10,"suggestions":"492"},{"ruleId":"474","severity":1,"message":"493","line":213,"column":6,"nodeType":"476","endLine":213,"endColumn":19,"suggestions":"494"},{"ruleId":"470","severity":1,"message":"495","line":15,"column":10,"nodeType":"472","messageId":"473","endLine":15,"endColumn":19},{"ruleId":"470","severity":1,"message":"496","line":4,"column":22,"nodeType":"472","messageId":"473","endLine":4,"endColumn":30},{"ruleId":"497","severity":1,"message":"498","line":282,"column":1,"nodeType":"499","endLine":290,"endColumn":3},{"ruleId":"474","severity":1,"message":"500","line":109,"column":8,"nodeType":"476","endLine":109,"endColumn":16,"suggestions":"501"},{"ruleId":"470","severity":1,"message":"502","line":1,"column":10,"nodeType":"472","messageId":"473","endLine":1,"endColumn":28},{"ruleId":"470","severity":1,"message":"503","line":2,"column":29,"nodeType":"472","messageId":"473","endLine":2,"endColumn":37},{"ruleId":"482","severity":1,"message":"483","line":56,"column":29,"nodeType":"484","messageId":"485","endLine":56,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":60,"column":29,"nodeType":"484","messageId":"485","endLine":60,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":64,"column":29,"nodeType":"484","messageId":"485","endLine":64,"endColumn":31},{"ruleId":"470","severity":1,"message":"504","line":107,"column":13,"nodeType":"472","messageId":"473","endLine":107,"endColumn":17},{"ruleId":"482","severity":1,"message":"483","line":114,"column":29,"nodeType":"484","messageId":"485","endLine":114,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":116,"column":36,"nodeType":"484","messageId":"485","endLine":116,"endColumn":38},{"ruleId":"482","severity":1,"message":"483","line":171,"column":29,"nodeType":"484","messageId":"485","endLine":171,"endColumn":31},{"ruleId":"470","severity":1,"message":"505","line":68,"column":9,"nodeType":"472","messageId":"473","endLine":68,"endColumn":17},{"ruleId":"474","severity":1,"message":"506","line":99,"column":20,"nodeType":"507","endLine":99,"endColumn":63},{"ruleId":"474","severity":1,"message":"508","line":110,"column":8,"nodeType":"476","endLine":110,"endColumn":62,"suggestions":"509"},{"ruleId":"470","severity":1,"message":"510","line":9,"column":8,"nodeType":"472","messageId":"473","endLine":9,"endColumn":13},{"ruleId":"474","severity":1,"message":"511","line":35,"column":8,"nodeType":"476","endLine":35,"endColumn":16,"suggestions":"512"},{"ruleId":"482","severity":1,"message":"483","line":121,"column":29,"nodeType":"484","messageId":"485","endLine":121,"endColumn":31},{"ruleId":"470","severity":1,"message":"513","line":1,"column":8,"nodeType":"472","messageId":"473","endLine":1,"endColumn":13},{"ruleId":"470","severity":1,"message":"514","line":1,"column":17,"nodeType":"472","messageId":"473","endLine":1,"endColumn":27},{"ruleId":"470","severity":1,"message":"515","line":8,"column":8,"nodeType":"472","messageId":"473","endLine":8,"endColumn":18},{"ruleId":"470","severity":1,"message":"516","line":9,"column":10,"nodeType":"472","messageId":"473","endLine":9,"endColumn":22},{"ruleId":"474","severity":1,"message":"486","line":97,"column":8,"nodeType":"476","endLine":97,"endColumn":29,"suggestions":"517"},{"ruleId":"474","severity":1,"message":"475","line":14,"column":6,"nodeType":"476","endLine":14,"endColumn":8,"suggestions":"518"},{"ruleId":"478","severity":1,"message":"479","line":20,"column":48,"nodeType":"480","messageId":"481","endLine":20,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":22,"column":48,"nodeType":"480","messageId":"481","endLine":22,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":49,"column":48,"nodeType":"480","messageId":"481","endLine":49,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":52,"column":48,"nodeType":"480","messageId":"481","endLine":52,"endColumn":50},{"ruleId":"478","severity":1,"message":"479","line":53,"column":33,"nodeType":"480","messageId":"481","endLine":53,"endColumn":35},{"ruleId":"478","severity":1,"message":"479","line":54,"column":53,"nodeType":"480","messageId":"481","endLine":54,"endColumn":55},{"ruleId":"482","severity":1,"message":"483","line":58,"column":26,"nodeType":"484","messageId":"485","endLine":58,"endColumn":28},{"ruleId":"478","severity":1,"message":"479","line":60,"column":41,"nodeType":"480","messageId":"481","endLine":60,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":62,"column":41,"nodeType":"484","messageId":"485","endLine":62,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":63,"column":41,"nodeType":"484","messageId":"485","endLine":63,"endColumn":43},{"ruleId":"470","severity":1,"message":"490","line":26,"column":17,"nodeType":"472","messageId":"473","endLine":26,"endColumn":25},{"ruleId":"474","severity":1,"message":"491","line":206,"column":6,"nodeType":"476","endLine":206,"endColumn":10,"suggestions":"519"},{"ruleId":"474","severity":1,"message":"493","line":212,"column":6,"nodeType":"476","endLine":212,"endColumn":19,"suggestions":"520"},{"ruleId":"470","severity":1,"message":"495","line":15,"column":10,"nodeType":"472","messageId":"473","endLine":15,"endColumn":19},{"ruleId":"497","severity":1,"message":"498","line":282,"column":1,"nodeType":"499","endLine":290,"endColumn":3},{"ruleId":"474","severity":1,"message":"511","line":34,"column":8,"nodeType":"476","endLine":34,"endColumn":16,"suggestions":"521"},{"ruleId":"482","severity":1,"message":"483","line":120,"column":29,"nodeType":"484","messageId":"485","endLine":120,"endColumn":31},{"ruleId":"470","severity":1,"message":"504","line":107,"column":13,"nodeType":"472","messageId":"473","endLine":107,"endColumn":17},{"ruleId":"482","severity":1,"message":"483","line":114,"column":29,"nodeType":"484","messageId":"485","endLine":114,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":116,"column":36,"nodeType":"484","messageId":"485","endLine":116,"endColumn":38},{"ruleId":"482","severity":1,"message":"483","line":171,"column":29,"nodeType":"484","messageId":"485","endLine":171,"endColumn":31},{"ruleId":"470","severity":1,"message":"505","line":68,"column":9,"nodeType":"472","messageId":"473","endLine":68,"endColumn":17},{"ruleId":"474","severity":1,"message":"506","line":99,"column":20,"nodeType":"507","endLine":99,"endColumn":63},{"ruleId":"474","severity":1,"message":"508","line":110,"column":8,"nodeType":"476","endLine":110,"endColumn":62,"suggestions":"522"},{"ruleId":"474","severity":1,"message":"500","line":109,"column":8,"nodeType":"476","endLine":109,"endColumn":16,"suggestions":"523"},{"ruleId":"482","severity":1,"message":"483","line":56,"column":29,"nodeType":"484","messageId":"485","endLine":56,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":60,"column":29,"nodeType":"484","messageId":"485","endLine":60,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":64,"column":29,"nodeType":"484","messageId":"485","endLine":64,"endColumn":31},"no-native-reassign",["524"],"no-negated-in-lhs",["525"],"no-unused-vars","'Vista' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'renderConnectorUML' and 'renderNodesUML'. Either include them or remove the dependency array.","ArrayExpression",["526"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.",["527"],"'composite2' is assigned a value but never used.","'setComposite2' is assigned a value but never used.","'setListT' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'selectNodeHandler', 'setSelectedNodes', 'setSelectionModel', and 'unselectNodeHandler'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has a missing dependency: 'setEdgesLabel'. Either include it or remove the dependency array.",["529"],"'TextField' is defined but never used.","'useTheme' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["530"],"'RestorePageRounded' is defined but never used.","'useState' is defined but never used.","'name' is assigned a value but never used.","'nodesDos' is assigned a value but never used.","Assignments to the 'edgesDos' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'calculateTotal'. Either include it or remove the dependency array.",["531"],"'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'selectedProject', 'setSelectedProject', and 'user'. Either include them or remove the dependency array.",["532"],"'React' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'ModalMessage' is defined but never used.",["533"],["534"],["535"],["536"],["537"],["538"],["539"],"no-global-assign","no-unsafe-negation",{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"542","fix":"554"},{"desc":"540","fix":"555"},{"desc":"544","fix":"556"},{"desc":"546","fix":"557"},{"desc":"552","fix":"558"},{"desc":"550","fix":"559"},{"desc":"548","fix":"560"},"Update the dependencies array to be: [renderConnectorUML, renderNodesUML]",{"range":"561","text":"562"},"Update the dependencies array to be: [user, reloadSidebar, get]",{"range":"563","text":"564"},"Update the dependencies array to be: [cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",{"range":"565","text":"566"},"Update the dependencies array to be: [checked, cy, setEdgesLabel]",{"range":"567","text":"568"},"Update the dependencies array to be: [loader, onClose]",{"range":"569","text":"570"},"Update the dependencies array to be: [calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]",{"range":"571","text":"572"},"Update the dependencies array to be: [render, selectedProject, setSelectedProject, user]",{"range":"573","text":"574"},{"range":"575","text":"564"},{"range":"576","text":"562"},{"range":"577","text":"566"},{"range":"578","text":"568"},{"range":"579","text":"574"},{"range":"580","text":"572"},{"range":"581","text":"570"},[483,485],"[renderConnectorUML, renderNodesUML]",[2662,2683],"[user, reloadSidebar, get]",[5478,5482],"[cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",[5560,5573],"[checked, cy, setEdgesLabel]",[3654,3662],"[loader, onClose]",[4170,4224],"[calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]",[1418,1426],"[render, selectedProject, setSelectedProject, user]",[2662,2683],[483,485],[5422,5426],[5504,5517],[1390,1398],[4170,4224],[3654,3662]]